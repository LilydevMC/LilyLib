plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

repositories {
	// For Fabric Permissions API (https://github.com/lucko/fabric-permissions-api)
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots"
	}

	// For Placeholder API (https://github.com/Patbox/TextPlaceholderAPI)
	maven {
		url "https://maven.nucleoid.xyz/"
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// For TOML
	include(implementation("com.moandjiezana.toml:toml4j:0.7.2"))

	// For Fabric Permissions API (https://github.com/lucko/fabric-permissions-api)
	include(modImplementation("me.lucko:fabric-permissions-api:${project.fabric_permissions_api_version}"))

	// For Placeholder API (https://github.com/Patbox/TextPlaceholderAPI)
	include(modImplementation("eu.pb4:placeholder-api:${project.placeholder_api_version}"))

	afterEvaluate {
		testmodImplementation sourceSets.main.output
	}
}

base {
	archivesName = project.archives_base_name
}

loom {
	runs  {
		testmodClient {
			client()
			configName = "Test Mod Client"
			source(project.sourceSets.testmod)
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.

		maven {
			name "lilydevMaven"

			if (project.is_snapshot) {
				url "https://maven.lilydev.com/snapshots"
			} else {
				url "https://maven.lilydev.com/releases"
			}

			credentials {
				username System.getenv("REPO_USER")
				password System.getenv("REPO_TOKEN")
			}
		}

		mavenLocal()
	}
}
